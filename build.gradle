plugins {
	id 'fabric-loom' version "${loom_version}"
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
    mavenCentral()
    maven { url "https://maven.fabricmc.net/" }
    maven { url "https://maven.terraformersmc.com/releases/" }
    // Modrinth Maven (YACL)
    maven {
        url "https://api.modrinth.com/maven"
        content { includeGroup "maven.modrinth" }
    }
    // IsXander Maven (alternatif kaynak)
    maven { url "https://maven.isxander.dev/releases" }
}



loom {
	splitEnvironmentSourceSets()

	mods {
		"roseum" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}

}

sourceSets {
    main {
        resources {
		// datagen
            srcDir "src/main/generated"
        }
    }
}

fabricApi {
	configureDataGeneration {
		client = true
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	
	// ModMenu (optional UI)
    modCompileOnly "com.terraformersmc:modmenu:7.2.2"
    modRuntimeOnly  "com.terraformersmc:modmenu:7.2.2"

    // YACL (opsiyonel)
	// Derleme zamanı
    modCompileOnly("dev.isxander:yet-another-config-lib:3.6.6+1.20.1-fabric")
    // Çalışma zamanı
    modRuntimeOnly("dev.isxander:yet-another-config-lib:3.6.6+1.20.1-fabric")

}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": inputs.properties.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	
	toolchain {
    languageVersion = JavaLanguageVersion.of(17)
  }
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	inputs.property "archivesName", project.base.archivesName

	from("LICENSE") {
		rename { "${it}_${inputs.properties.archivesName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}